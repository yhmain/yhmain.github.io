<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2022/02/09Test_my_site</title>
    <url>/2022/02/09/2022-02-09Test-my-site/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2>]]></content>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo+Github搭建个人博客</title>
    <url>/2022/02/09/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<center style="font-size:larger;font-weight:bold">GitHub+Hexo 搭建个人网站详细教程（一）------初识Hexo</center>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>&emsp; 利用Hexo快速搭建一个网站，并且将其部署在github上面，使得可以通过域名访问你自己的个人网站，实现成为一个站长的梦想！就这样快速拥有自己的博客网站，写文章记录生活，享受这种从0到1的过程!</p>
<span id="more"></span>
<h1 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h1><h2 id="Github创建个人仓库"><a href="#Github创建个人仓库" class="headerlink" title="Github创建个人仓库"></a>Github创建个人仓库</h2><p>&emsp; 如果无Github账号，使用你的邮箱在<a href="https://github.com/">Github官网</a>注册帐号，不会的同学请自行百度“Github如何注册账号”。<br>&emsp; 注册完成或者已有账号做如下操作：</p>
<ol>
<li>点击GitHub中的New repository创建新仓库<br><img src="https://tva4.sinaimg.cn/large/006LDSTgly1gz9w2lq6lyj31hc0o2ara.jpg" alt="Github_new"><br>这里我报红是因为我已经创建了一个同名仓库。记住仓库名为：<strong>用户名</strong>.github.io，仔细看图中的红框，用户名一定要和你Github账户的用户名相同！<br><img src="https://tvax3.sinaimg.cn/large/006LDSTgly1gz9w7mlm2dj30wn0ka46l.jpg" alt="Github_resp_name"></li>
<li>点击Create repository即可<h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2>&emsp; 什么是Git ?简单来说Git是开源的分布式版本控制系统，用于敏捷高效地处理项目。我们网站在本地搭建好了，需要使用Git同步到GitHub上。提供如下资料：</li>
</ol>
<ul>
<li><a href="https://link.zhihu.com/?target=http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000">Git教程</a></li>
<li><a href="https://link.zhihu.com/?target=https://git-scm.com/download/win">Git下载</a>，现在的电脑基本都是64位的，选择64位的安装包，下载后安装，在命令行里输入git测试是否安装成功。若安装失败，参看其他详细的Git安装教程。</li>
</ul>
<ol>
<li>安装成功后，将你的Git与GitHub帐号绑定，鼠标右击打开Git Bash<br><img src="https://tvax4.sinaimg.cn/large/006LDSTgly1gz9wiffji1j306z0a4glv.jpg" alt="Git_Bash"></li>
<li>设置user.name和user.email配置信息：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的GitHub用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure></li>
<li>生成ssh密钥文件：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure></li>
<li>接下来直接三个回车即可，默认不需要设置密码，然后找到生成的.ssh的文件夹中的id_rsa.pub密钥，将内容全部复制。可能在页面上看不到.ssh，那么你可以直接在上方地址栏输入路径，再回车进入（我查看打开隐藏项目，似乎也没有看到，所以这样做的）<br><img src="https://tvax1.sinaimg.cn/large/006LDSTgly1gz9wusjq2aj30sj09kjv2.jpg" alt="ssh"></li>
<li>打开<a href="https://link.zhihu.com/?target=https://github.com/settings/keys">GitHub_Settings_keys</a> 页面，新建new SSH Key。Title为标题，任意填即可，将刚刚复制的id_rsa.pub内容粘贴进去，最后点击Add SSH key<br><img src="https://tva4.sinaimg.cn/large/006LDSTgly1gz9wxtqa7ej30k70aijrj.jpg" alt="new_ssh_key"></li>
<li>在Git Bash中检测GitHub公钥设置是否成功，输入 <code>ssh git@github.com </code>：<br><img src="https://tva4.sinaimg.cn/large/006LDSTgly1gz9x2kbn0ej30pa087n0s.jpg" alt="ssh_check"><br>如上则说明成功。这里之所以设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。<h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2>&emsp; Hexo基于Node.js，Node.js下载地址：<a href="https://nodejs.org/en/download/">Node.js 下载安装包</a>，注意安装Node.js会包含环境变量及npm的安装，安装后，检测Node.js是否安装成功，在命令行中输入 node -v :<br><img src="https://tva3.sinaimg.cn/large/006LDSTgly1gz9x6x4a6aj30m8066ach.jpg" alt="1644588153(1)"><br>检测npm是否安装成功，在命令行中输入npm -v :<br><img src="https://tva3.sinaimg.cn/large/006LDSTgly1gz9x7rirkkj30m708fgor.jpg" alt="1644588204(1)"><br>到这了，安装Hexo的环境已经全部搭建完成。<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2>Hexo就是我们的个人博客网站的框架， 这里需要自己在电脑常里创建一个文件夹，可以命名为Blog，Hexo框架与以后你自己发布的网页都在这个文件夹中。为了后面方便描述，假设我是建在D盘，则现在路径如下：<code>D:\Blog</code><br>创建好后，进入文件夹中，如下所示：<br><img src="https://tvax2.sinaimg.cn/large/006LDSTgly1gz9xcw356bj30n5070acu.jpg" alt="1644588492(1)"><br>进入路径<code>D:\Blog</code>后，再使用npm命令安装Hexo，输入：<br><code>npm install -g hexo-cli</code><br>这个安装时间可能会很长？安装完成后，初始化我们的博客，输入：<br><code>hexo init blog</code>  该命令会在Blog文件夹下创建一个名称为blog的文件夹<br>说明：这里的命令都是作用在刚刚创建的Blog文件夹中。</li>
</ol>
<p><strong>接下来进入blog文件夹！！！</strong>：<br><code>cd blog</code><br>为了检测我们的网站雏形，分别<strong>按顺序输入以下三条命令</strong>：<br><code>hexo new test_my_site</code><br><code>hexo g</code><br><code>hexo s</code><br>这些命令在后面作介绍，完成后，打开浏览器输入地址：<br><a href="localhost:4000">localhost:4000</a><br>可以看出我们写出第一篇博客，只不过我下图是<strong>我修改过的配置</strong>，和大家的显示不一样。<br><img src="https://tva1.sinaimg.cn/large/006LDSTgly1gz9xmc4n64j31hc0o2gy1.jpg" alt="test_site"></p>
<h2 id="常用的Hexo-命令及含义"><a href="#常用的Hexo-命令及含义" class="headerlink" title="常用的Hexo 命令及含义"></a>常用的Hexo 命令及含义</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo -g <span class="comment">#安装Hexo</span></span><br><span class="line">npm update hexo -g <span class="comment">#升级</span></span><br><span class="line">hexo init <span class="comment">#初始化博客</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">命令简写</span><br><span class="line">hexo n <span class="string">&quot;我的博客&quot;</span> == hexo new <span class="string">&quot;我的博客&quot;</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo g == hexo generate <span class="comment">#生成</span></span><br><span class="line">hexo s == hexo server <span class="comment">#启动服务预览</span></span><br><span class="line">hexo d == hexo deploy <span class="comment">#部署</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo server <span class="comment">#Hexo会监视文件变动并自动更新，无须重启服务器</span></span><br><span class="line">hexo server -s <span class="comment">#静态模式</span></span><br><span class="line">hexo server -p 5000 <span class="comment">#更改端口</span></span><br><span class="line">hexo server -i 192.168.1.1 <span class="comment">#自定义 IP</span></span><br><span class="line">hexo clean <span class="comment">#清除缓存，若是网页正常情况下可以忽略这条命令</span></span><br></pre></td></tr></table></figure>
<h2 id="推送网站"><a href="#推送网站" class="headerlink" title="推送网站"></a>推送网站</h2><p>上面只是在本地预览，接下来要做的就是就是推送网站，也就是发布网站，让我们的网站可以<strong>在互联网上访问</strong>。在设置之前，需要解释一个概念，在blog根目录里的_config.yml文件称为<strong>站点配置文件</strong>，如下图：<br><img src="https://tva3.sinaimg.cn/large/006LDSTgly1gz9xrnnhn5j30sh0fraho.jpg" alt="1644589346(1)"><br>进入根目录里的themes文件夹，里面也有个_config.yml文件，这个称为主题配置文件，如下图：<br><img src="https://tva3.sinaimg.cn/large/006LDSTgly1gz9xsxlynij30s60ivgu6.jpg" alt="1644589425(1)"><br>记住：这2个文件在我们之后对网站的样式修改的过程中起到非常重要的作用！！！</p>
<hr>
<p>下一步将我们的Hexo与GitHub关联起来，打开站点的配置文件_config.yml，翻到最后修改为：<br><strong><font color=red>注意点：1. 间隔的空格 2. 地址后面加上.git</font></strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/yhmain/yhmain.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p><img src="https://tvax3.sinaimg.cn/large/006LDSTgly1gz9xwx2uzaj30q60gh457.jpg" alt="1644589645(1)"><br>其实就是给hexo d 这个命令做相应的配置，让hexo知道你要把blog部署在哪个位置，很显然，我们部署在我们GitHub的仓库里。最后安装Git部署插件，输入命令：<br><code>npm install hexo-deployer-git --save</code><br>这时，再分别输入三条命令：<br><code>hexo clean </code><br><code>hexo g </code><br><code>hexo d</code><br>其实第三条的 hexo d 就是部署网站命令，d是deploy的缩写。完成后，打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即 xxxx.github.io，比如我的xxxx就是我的GitHub用户名：yhmain.github.io<br>你就会发现你的博客已经上线了，可以在网络上被访问了!:tw-1f31e:<br>补充：</p>
<ul>
<li>如果想使用自己的域名，可以参考这篇文章：<a href="https://zhuanlan.zhihu.com/p/26625249">Github+Hexo搭建个人网站</a><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2>如果你不喜欢Hexo默认的主题，可以更换不同的主题，主题传送门：<a href="https://hexo.io/themes/">Themes</a> 我自己使用的是Next主题（<strong>推荐</strong>，后续咱也有主题对应的教程），可以在blog目录中的themes文件夹中查看你自己主题是什么。现在把默认主题更改成Next主题，首先我们需要把主题下载下来（2种方法）：</li>
</ul>
<ol>
<li>在线下载。在blog目录中（就是命令行的位置处于blog目录）打开命令行输入：<br><code>git clone https://github.com/theme-next/hexo-theme-next</code><br>记住地址可能会变，但是你看这个人的仓库就知道或许移到哪了。</li>
<li>离线下载。 选择Download Zip。下载后放到themes文件夹下，解压后命名为next<br><img src="https://tva2.sinaimg.cn/large/006LDSTgly1gz9yjfze1sj31hc0o217y.jpg" alt="1644590953(1)"><br>说明：如果Github下载慢，对于在线下载，有VPN条件的同学试试 让终端走代理 export xxx；对于离线下载，可以先将这个仓库拉到自己的<a href="https://gitee.com/">码云</a>仓库，不会的就可以去自行百度了，毕竟方法都教给你了，路总是要亲自走的~:tw-2611:<br>之后，打开<strong>站点</strong>的_config.yml配置文件，修改主题为next：<br><img src="https://tvax2.sinaimg.cn/large/006LDSTgly1gz9yrko790j30pu0gcn3r.jpg" alt="1644591425(1)"><br>接下来，打开<strong>主题</strong>的_config.yml配置文件，找到Scheme Settings<br><img src="https://tvax1.sinaimg.cn/large/006LDSTgly1gz9yu18l2nj30q70g8435.jpg" alt="1644591557(1)"><br>next主题有三个样式，我用的是Pisces，你们可以自己试试看，选择你自己喜欢的样式（只需要把行首的#去除，#是注释），选择好后，再次部署网站，hexo g、hexo d，查看效果。选择其他主题，按照上述过程即可实现。<br>注意：每次部署后，需要等几分钟才会刷新页面，毕竟是在Github上面嘛。所以想要即时看到效果的话建议是hexo s，在本地输入<a href="http://localhost:4000/">localhost:4000</a>查看。<h2 id="相关参考学习链接"><a href="#相关参考学习链接" class="headerlink" title="相关参考学习链接"></a>相关参考学习链接</h2></li>
<li><a href="https://hexo.io/zh-cn/docs/">Hexo学习</a></li>
<li><a href="http://theme-next.iissnan.com/theme-settings.html">Next主题配置</a></li>
<li><a href="https://hexo-next.readthedocs.io/zh_CN/latest/">强烈推荐：Hexo-Next联合配置</a></li>
<li><a href="https://blog.csdn.net/qq_35479468/article/details/107454287">Hexo+next主题自定义友情链接页面</a></li>
</ol>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/02/09/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
